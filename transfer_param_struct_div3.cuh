/**
 * \file
 * \brief TransferParamStructDiv3 class declaration
 */
#ifndef TRANSFER_PARAM_STRUCT_DIV3_CUH
#define TRANSFER_PARAM_STRUCT_DIV3_CUH

#include "cuda_member.cuh"
#include "vector_types.h"

class Float3ToFanTransform;

/**
 * \brief Class ...
 */
class TransferParamStructDiv3 {
public:
    /**
     * \brief Class constructor
     * \param imIdxToFanIdx ...
     */
    TransferParamStructDiv3(const Float3ToFanTransform imIdxToFanIdx);

    /**
     * \brief ...
     * \param idxI ...
     * \param idxJ ...
     * \return void
     */
    CUDA_CALLABLE_MEMBER void init(const int idxI, const int idxJ);

    /**
     * \brief ...
     * \param idxK ...
     * \return ...
     */
    CUDA_CALLABLE_MEMBER float3 getFanIdx(const int idxK) const;

private:
    float3 globalOffset;///< ...
    float3 coefOffset;  ///< ...
    float3 coefIdxI;    ///< ...
    float3 coefIdxJ;    ///< ...
    float3 inc;         ///< ...
    float3 start;       ///< ...
    float2 normDist;    ///< ...
};

#endif // TRANSFER_PARAM_STRUCT_DIV3_CUH
